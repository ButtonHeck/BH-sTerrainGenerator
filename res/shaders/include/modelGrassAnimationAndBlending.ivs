uniform bool  u_isGrass;
uniform float u_grassPosDistrubution;

const vec3 GRASS_WAVE_XYZ = vec3(0.007, 0.0023, 0.0035);
out float v_AlphaValue;

void ext_animateAndBlend(inout vec4 ModelWorldPosition,
                     inout float normalDistributionImitation)
{
    if (u_isGrass)
    {
        if (i_pos.y > 0.38)
        {
            float fractionOfWorldX = fract(ModelWorldPosition.x); //coarse phase offset tweak
            float fractionOfWorldZ = fract(ModelWorldPosition.z); //fine phase offset tweak
            float influence = sin(u_grassPosDistrubution * max(fractionOfWorldX, 0.75) + fractionOfWorldZ) * 0.5 + 0.5;
            ModelWorldPosition.xyz += (mix(GRASS_WAVE_XYZ,
                                           GRASS_WAVE_XYZ + i_normal * 0.005,
                                           dot(normalize(GRASS_WAVE_XYZ), i_normal)))
                                     * influence;
            normalDistributionImitation = 0.66 * influence + 0.66;
        }
        v_AlphaValue = ModelWorldPosition.y * 32;
    }
    else
    {
        v_AlphaValue = clamp(ModelWorldPosition.y * 48, 0.0, 4.0);
    }
}
